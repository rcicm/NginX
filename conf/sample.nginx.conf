
#user  nobody;
worker_processes  6;

pid        logs/nginx.pid;


events {
    worker_connections  2048;
}


http {
    #Conf to enable the addon 'LogRequestSpeed'.
    log_request_speed_filter on;
    log_request_speed_filter_timeout 1;


    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #Gzip disable only to test the 'gzip_static'
    #gzip  on;

    proxy_cache_path  /opt/nginx/cache  levels=1   keys_zone=one:10m  max_size=20m inactive=1d;
    proxy_cache_key "$uri";
    proxy_cache_use_stale error timeout updating invalid_header http_500 http_502 http_503 http_504 http_404;

    proxy_read_timeout 10;
    proxy_connect_timeout 10;
    proxy_send_timeout 10;
    proxy_ignore_client_abort on;

    proxy_temp_path /opt/nginx/cache 1;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" Local: $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" $request_time '
                     'Proxy: $upstream_cache_status $upstream_status $upstream_response_time';
    access_log /opt/nginx/logs/access.log main;
    error_log  logs/error.log;

   

    #Configuration of a backend to process jsp files, with http_healthcheck addon enable  
    upstream app_backend {
        server localhost:9080;
        server localhost:8080;
        healthcheck_enabled;
        healthcheck_delay 3000;
        healthcheck_timeout 2000;
        healthcheck_failcount 2;
        healthcheck_send 'GET /check.jsp HTTP/1.0'
        'Host: 10.249.1.116'
        'Conection: close';
#	healthcheck_expected 'WORKING';
    }




    server {
        listen       80;
        server_name  localhost;


       # Location to test access to memcache
        location ~ /memcache/ {
            set $memcached_key $uri;
            memcached_pass     localhost:11211;
            default_type       text/html;
            error_page         404 @fallback;
        }
 
        location @fallback {
            proxy_pass http://app_backend;
        }




        #Location to test the addon 'headersmore' (Set and clear input and output headers)
        location  /headers {
            more_set_headers 'X-MyHeader: blah' 'X-MyHeader2: foo';
            more_set_headers -t 'text/plain text/css' 'Content-Type: text/foo';
            more_set_headers -s '400 404 500 503' -s 413 'Foo: Bar';
            more_clear_headers 'Date' 'Content-Type';
 
            # your proxy_pass/memcached_pass/or any other config goes here...
        }




        #Location to pass the request ended in .jsp to a backend
       location ~ \.jsp$ {
          proxy_pass        http://app_backend;
          proxy_cache one;
          proxy_cache_valid  200 302  1m;
        }



       # Location to pass the request to http_flv_module
        location ~ \.flv$ {
            flv;
        }



        location / {
            gzip_static on;
 
            gzip_http_version   1.1;
            gzip_proxied        expired no-cache no-store private auth;
            gzip_disable        "MSIE [1-6]\.";
            root   html;
            index  index.html index.htm;
        }




        # Location to allow/deny access to nginx status page (http_stub_status_module)
        location /nginx_status {
          stub_status on;
          access_log   off;
          allow  10.2.48.0/24;
          deny all;
        }




        # Redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

}
